package 快速排序法;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JTextArea;
import javax.swing.JScrollBar;
import javax.swing.JSpinner;
import javax.swing.JTextPane;
import javax.swing.JList;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.util.Random;
import java.awt.event.ActionEvent;

public class Demo extends JFrame {

	private JPanel contentPane;
	int[] array = new int[8];
	private JTextArea textArea2;
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Demo frame = new Demo();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Demo() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JTextArea textArea = new JTextArea();
		textArea.setBounds(10, 10, 403, 24);
		contentPane.add(textArea);
		
		JButton button = new JButton("\u751F\u6210\u968F\u673A\u6570");
		button.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				textArea.setText("");
				for(int j = 0; j<array.length;j++) {
					array[j] = (new Random()).nextInt(100);
					textArea.append(array[j]+" ");
				}
			}
		});
		
		JTextArea textArea2 = new JTextArea();
		textArea2.setBounds(10, 82, 414, 132);
		contentPane.add(textArea2);
		button.setBounds(165, 41, 93, 23);
		contentPane.add(button);
		
		JButton button_1 = new JButton("\u5FEB\u901F\u6392\u5E8F\u6CD5");
		button_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				textArea2.setText("");
				quickSort(array,0,array.length -1);
				
				
				private void quickSort(int[] sortarray, int lowIndex, int highIndex) {
				// TODO Auto-generated method stub
				int lo = lowIndex;
				int hi = highIndex;
				int mid;
				if(highIndex > lowIndex) {
					mid = sortarray[(lowIndex+highIndex)/2];
					while(lo <= hi) {
						while((lo<highIndex)&&(sortarray[lo]<mid))
							++lo;
						while((hi>lowIndex)&&(sortarray[hi]>mid))
							--hi;
						if(lo <= hi) {
							swap(sortarray,lo,hi);
							++lo;
							--hi;
						}
						}
					if(lowIndex < hi)
						quickSort(sortarray,lowIndex,hi);
					if(lo < highIndex)
						quickSort(sortarray,lo,highIndex);
							}
				}
				
				private void swap(int swapArray[], int i, int j) {
					int temp = swapArray[i];
					swapArray[i] = swapArray[j];
					swapArray[j] = temp;
					for(int k = 0 ; k < array.length; k++) {
						textArea2.append(array[k]+"  ");
					}
					textArea2.append("\n");
				}
				
			}
		});
		button_1.setBounds(165, 224, 93, 23);
		contentPane.add(button_1);
	}

	/*protected void quickSort(int sortarray[], int lowIndex, int highIndex) {
		// TODO Auto-generated method stub
		int lo = lowIndex;
		int hi = highIndex;
		int mid;
		if(highIndex > lowIndex) {
			mid = sortarray[(lowIndex+highIndex)/2];
			while(lo <= hi) {
				while((lo<highIndex)&&(sortarray[lo]<mid))
					lo++;
				while((hi>lowIndex)&&(sortarray[hi]>mid))
					hi--;
				if(lo <= hi) {
					swap(sortarray,lo,hi);
					lo++;
					hi--;
				}
			}
			if(lowIndex < hi)
				quickSort(sortarray,lowIndex,hi);
			if(lo < highIndex)
				quickSort(sortarray,lo,highIndex);
		}
		
	}*/

	/*private void swap(int[] sortarray, int lo, int hi) {
		// TODO Auto-generated method stub
		int temp = sortarray[lo];
		sortarray[lo] = sortarray[hi];
		sortarray[hi] = temp;
		for(int k = 0 ; k<array.length;k++) {
			textArea2.append(array[k]+" ");
		}
		textArea2.append("\n");
	}*/
}
