*整数相除只能得到整数；

int x = 3;
int y = 4;
System.out.printIn(x/y);  //结果为0
System.out.printIn(x*1.0/y);  //结果为0.75
×1.0后变成了浮点数

将a,b的值互换
1.通过第三方temp转接
2.通过异或
  a=a^b;
  b=a^b;
  a=a^b;
3.通过加减法
  a=a+b;
  b=a-b;
  a=a-b;
  
  
  s+=1
  不等价于 s= s + 1;
  而是等价于 s = (s的数据类型)（s+1）;
  
  &&和&
  A:最终结果一样;
  B:&&具有短路作用；
  只要第一个为False，则第二个不执行;


方法重载：
在同一个类中，允许存在同名方法，只要参数个数或者参数类型不同即可，与返回值类型无关。

数组命名方式：(推荐格式)
int[] a ;
动态初始化：
	数据类型[]  数组名 = new 数据类型[数组长度];
	new 为数组分配内存空间
静态初始化：
	数据类型[] 数组名 = new 数据类型[]{元素1，元素2，...};
	简化格式：数据类型[] 数组名 = {元素1，元素2，...};
	
继承：  A.只支持单继承
	B.支持多层继承
	C.子类不能继承父类的私有方法，也不可继承私有成员变量
	
关于public,protected,默认,private的访问权限范围：
	在同类下，都可见;
	在同一个包下，子类无法访问父类private修饰内容;
	在不同包下，子类无法访问父类默认修饰内容;
状态修饰符:static , final
抽象修饰符:abstract

多态前提：A.要有继承关系 B.要有方法重写 C.要有父类引用只想子类对象 父 f = new 子();

多态中成员变量的访问特点：
A.成员变量:编译看左边,编译看左边（左边指父类）
B.构造方法:创建子类对象的时候，访问父类的构造方法，对父类进行初始化
C.成员方法:编译看左边,运行看右边（右边指子类）
D.静态方法:编译和运行均看左边（因为静态和类相关，不能重写，访问的还是左边）

多态的好处：维护性和扩展性

对象间的转型问题：
向上转型:Fu f = new Zi();
向下转型:Zi z = (Zi) f ; 使用子类的特有功能

多态同子类间的转型：
	Animal a = new Dog(); //定义狗
	a.eat();
	Dog d = (Dog) a;	//还原成狗
	d.eat();
不同子类：//变成猫
	a = new Cat();
	//还原成猫
	Cat c = (Cat) a;
错误的转换方式：
	Dog dd = new Animal();
	Dog ddd = new Cat();

抽象类特点：
a.抽象类和抽象方法必须用abstract关键字修饰
b.抽象类中不一定有抽象方法，有抽象方法的类必须定义为抽象类
c.抽象类不能实例化。（只能靠子类实现，即多态）
d.抽象类的子类：1、如果不想重写抽象方法，该子类也是一个抽象类；2、重写所有的抽象方法，子类为一个具体的类。

抽象类的成员特点:
a.成员变量:变量或常量
b.构造方法:有
c.成员方法:即可抽象，也可非抽象


接口的特点:
a.接口用关键字interface表示
b.类实现接口用implements表示
c.接口不能实例化
d.接口的子类可以是抽象类（意义不大），具体类（重写接口中的所有抽象方法）

接口成员特点:
a.成员变量: 只能是常量，并且是静态的。默认修饰符是 public static final(建议手动给出)
b.构造方法：无
c.成员方法：只能是抽象方法。默认修饰符是  public abstract（建议手动给出）


内部类:
访问特点：
	a.内部类可以直接访问外部类的成员，包括私有
	b.外部类要访问内部类的成员，必须创建对象
位置:
	a.成员位置：成员内部类
	b.局部位置：局部内部类
1.成员内部类：
	Outer.Inner oi = new Outer().new Inner();
其中静态内部类访问的外部类数据也要用静态static修饰；
static修饰后的访问方式是：
	Outer.Inner of = new Outer.Inner();
注意：1.内部类与外部类不是继承关系，因此super不能用;
	2.通过外部类名限定this对象 Outer.this
2.局部内部类：外部类方法中的类
	a.可以直接访问外部类成员
	b.在局部位置创建内部类对象，通过对象调用内部类方法，来使用局部内部类功能。

注意事项:局部内部类访问局部变量必须使用final修饰

3.匿名内部类：内部类的简化写法
	a.前提：存在一个类或者接口（该类可以是具体类、抽象类）
	b.格式：new 类名或接口名(){
		 重写方法();
	}
	c.本质：是一个继承了该类或实现了该接口的子类匿名对象。

快捷键:
syso+Alt+/	 输出语句；
ctrl+shift+f	 格式化；
ctrl+shift+O	 导包；
ctrl+l  /**+回车 ctrl+shift+/     注释
alt+上/下箭头	 代码移动
ctrl+单击		 查看源码






